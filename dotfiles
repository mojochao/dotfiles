#!/usr/bin/env python3
from argparse import ArgumentParser
from os import makedirs, symlink, unlink
from os.path import abspath, dirname, exists, expanduser, islink, join


MANIFEST_FILE = 'MANIFEST'
SRC_DIR = abspath(join(dirname(__file__), 'src'))


def install(item):
    src = join(SRC_DIR, item)
    dst = expanduser(f'~/{item}')
    if not exists(dst):
        containing_dir = dirname(dst)
        if not exists(containing_dir):
            makedirs(containing_dir)
        symlink(src, dst)
        return f'installed {dst}'
    else:
        return f'{dst} found and skipped'


def uninstall(item):
    dst = expanduser(f'~/{item}')
    if islink(dst):
        unlink(dst)
        return f'uninstalled {dst}'
    else:
        return f'{dst} not found and skipped'


def main():
    parser = ArgumentParser(description='manage dotfiles in home directory')
    parser.add_argument('action', choices=['install', 'uninstall'], help='desired action')
    args = parser.parse_args()

    with open(MANIFEST_FILE) as infile:
        dotfiles = [i for i in infile.read().split('\n') if i != '']

    if args.action == 'install':
        results = [install(item) for item in dotfiles]
    else:
        results = [uninstall(item) for item in dotfiles]
    map(print, results)


if __name__ == '__main__':
    main()
